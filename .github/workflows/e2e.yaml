name: E2E Tests
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
jobs:
  e2e:
    name: 'E2E Tests'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container:
      image: docker://doronbancor/playwright-imagemagick:latest  # Updated to use your Docker image
      options: --platform linux/amd64  # Specify platform
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Fetch the last 2 commits for comparison

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn

      - name: Install Playwright browsers and run Playwright tests
        run: yarn e2e
        env:
          TENDERLY_ACCOUNT: bancor
          TENDERLY_PROJECT: carbon-test-forks
          TENDERLY_ACCESS_KEY: ${{ secrets.VITE_TENDERLY_ACCESS_KEY }}
          CI: true
          DRAFT: ${{ github.event.pull_request.draft || github.base_ref != 'main' }}

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 3

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: screenshots
          path: e2e/screenshots
          retention-days: 3

  commit-screenshots:
    name: 'Commit Screenshots'
    needs: e2e
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false && github.base_ref == 'main'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensure the last 2 commits are fetched for diff

      - uses: actions/download-artifact@master
        with:
          name: screenshots
          path: e2e/screenshots

      - name: Compare Modified Screenshots
        id: compare-screenshots
        run: |
          #!/bin/bash
          set -e

          echo "DEBUG: start bash script"

          # Directory where screenshots are stored
          SCREENSHOT_DIR="e2e/screenshots"

          # Get a list of modified screenshots
          modified_files=$(git diff --name-only --diff-filter=M -- "$SCREENSHOT_DIR" | grep '.png$' || true)

          echo "DEBUG: modified_files: $modified_files"

          # Function to compare images
          compare_images() {
              local img1="$1"
              local img2="$2"
              local diff_img="$3"

              # Use ImageMagick's compare tool to create a diff image
              compare -metric AE "$img1" "$img2" "$diff_img" 2>/dev/null || return 1
          }

          echo "DEBUG: compare_images function defined"

          # Check if any modified files are found
          if [[ -z "$modified_files" ]]; then
              echo "No modified PNG files found in $SCREENSHOT_DIR."
              exit 0
          fi

          echo "DEBUG: modified_files is not empty"

          # Process each modified screenshot
          for screenshot in $modified_files; do
              echo "DEBUG: loop iteration screenshot: $screenshot"
              # Full path to the modified screenshot
              current_screenshot="${GITHUB_WORKSPACE}/${screenshot}"
              echo "DEBUG: current_screenshot: $current_screenshot"

              # Check if the baseline screenshot exists
              if [ -f "$current_screenshot" ]; then
                  echo "DEBUG: baseline screenshot exists"
                  # Create a temporary diff image file
                  diff_file="${current_screenshot}.diff.png"

                  # Compare with the baseline version
                  compare_images "$current_screenshot" "$screenshot" "$diff_file"
                  echo "DEBUG: compare_images exit code: $?"

                  # Check if the image is identical to the baseline
                  if [ $? -eq 0 ]; then
                      echo "No visual difference for $screenshot. Reverting changes."
                      git restore "$screenshot"
                  else
                      echo "Visual difference detected for $screenshot. Keeping changes."
                  fi

                  # Clean up diff file
                  rm -f "$diff_file"
              else
                  echo "Baseline image does not exist for $screenshot. Keeping new image."
              fi
          done

      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: '[CI] Update Screenshots'
          commit_user_name: ${{ steps.import-gpg.outputs.name }}
          commit_user_email: ${{ steps.import-gpg.outputs.email }}
        env:
          GIT_CONFIG_PARAMETERS: "'--local commit.gpgsign true'"

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: screenshots
